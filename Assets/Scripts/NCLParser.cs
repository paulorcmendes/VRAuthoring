using UnityEngine;
using System.Xml;

public class NCLParser : MonoBehaviour {

    public XmlDocument doc;
    private XmlElement ncl;

    private XmlElement head;
    private XmlElement regionBase;
    private XmlElement descriptorBase;
    private XmlElement connectorBase;

    private XmlElement body;

    void Awake() {
        StartNewDocument();
    }
    public void StartNewDocument()
    {
        doc = new XmlDocument();

        ncl = doc.CreateElement(string.Empty, "ncl", string.Empty);
        AddAtributeToElement(ncl, "id", "Bumb-ar");
        AddAtributeToElement(ncl, "xmlms", "http://www.ncl.org.br/NCL3.0/EDTVProfile");


        head = doc.CreateElement(string.Empty, "head", string.Empty);
        regionBase = doc.CreateElement(string.Empty, "regionBase", string.Empty);
        descriptorBase = doc.CreateElement(string.Empty, "descriptorBase", string.Empty);
        connectorBase = doc.CreateElement(string.Empty, "connectorBase", string.Empty);

        connectorBase.AppendChild(CausalConnector("onBegin", "Start"));
        connectorBase.AppendChild(CausalConnector("onBegin", "Stop"));
        connectorBase.AppendChild(CausalConnector("onEnd", "Start"));
        connectorBase.AppendChild(CausalConnector("onEnd", "Stop"));


        body = doc.CreateElement(string.Empty, "body", string.Empty);
    }

    public void Save()
    {
        head.AppendChild(regionBase);
        head.AppendChild(descriptorBase);
        head.AppendChild(connectorBase);

        ncl.AppendChild(head);
        ncl.AppendChild(body);
        doc.AppendChild(ncl);

        XmlDeclaration xmldecl;
        xmldecl = doc.CreateXmlDeclaration("1.0", null, null);
        xmldecl.Encoding = "ISO-8859-1";
        //xmldecl.Standalone = "yes";

        // Add the new node to the document.
        XmlElement root = doc.DocumentElement;
        doc.InsertBefore(xmldecl, root);

        XmlComment newComment = doc.CreateComment("Generated by Bumb-AR Authoring Tool");
        doc.InsertBefore(newComment, ncl);


        doc.Save("doc.ncl");
    }
    private void AddAtributeToElement(XmlElement el, string name, string value)
    {
        XmlNode node = doc.CreateNode(XmlNodeType.Attribute, name, string.Empty);
        node.Value = value;
        el.Attributes.SetNamedItem(node);
    }
    private XmlElement CausalConnector(string condition, string action) {
        XmlElement causalConnector = doc.CreateElement(string.Empty, "causalConnector", string.Empty);
        AddAtributeToElement(causalConnector, "id", condition+action);

        XmlElement simpleCondition = doc.CreateElement(string.Empty, "simpleCondition", string.Empty);
        AddAtributeToElement(simpleCondition, "role", condition);

        XmlElement simpleAction = doc.CreateElement(string.Empty, "simpleAction", string.Empty);
        AddAtributeToElement(simpleAction, "role", action);

        causalConnector.AppendChild(simpleCondition);
        causalConnector.AppendChild(simpleAction);

        return causalConnector;
    }

    public void AddMedia(string id, string url, float volume, float x, float y, float w, float h, int zIndex)
    {
        XmlElement region = doc.CreateElement(string.Empty, "region", string.Empty);
        AddAtributeToElement(region, "id", "rg" + id);
        AddAtributeToElement(region, "left", (x * 100).ToString() + "%");
        AddAtributeToElement(region, "bottom", (y * 100).ToString() + "%");
        AddAtributeToElement(region, "width", (w * 100).ToString() + "%");
        AddAtributeToElement(region, "height", (h * 100).ToString() + "%");
        AddAtributeToElement(region, "zIndex", zIndex.ToString());
        regionBase.AppendChild(region);

        XmlElement descriptor = doc.CreateElement(string.Empty, "descriptor", string.Empty);
        AddAtributeToElement(descriptor, "id", "desc" + id);
        AddAtributeToElement(descriptor, "region", "rg" + id);
        AddAtributeToElement(descriptor, "soundLevel", (volume / 100).ToString());
        descriptorBase.AppendChild(descriptor);

        XmlElement media = doc.CreateElement(string.Empty, "media", string.Empty);
        AddAtributeToElement(media, "id", id);
        AddAtributeToElement(media, "src", url);
        AddAtributeToElement(media, "descriptor", "desc" + id);
        body.AppendChild(media);
    }
    public void AddPort(string id) {
        XmlElement port = doc.CreateElement(string.Empty, "port", string.Empty);
        AddAtributeToElement(port, "id", "port" + id);
        AddAtributeToElement(port, "component", id);
        body.AppendChild(port);
    }
    public void AddLink(string condition, string media1, string action, string media2) {
        XmlElement link = doc.CreateElement(string.Empty, "link", string.Empty);
        AddAtributeToElement(link, "xconnector", condition+action);

        XmlElement bind1 = doc.CreateElement(string.Empty, "bind", string.Empty);
        AddAtributeToElement(bind1, "role", condition);
        AddAtributeToElement(bind1, "component", media1);

        XmlElement bind2 = doc.CreateElement(string.Empty, "bind", string.Empty);
        AddAtributeToElement(bind2, "role", action);
        AddAtributeToElement(bind2, "component", media2);        

        link.AppendChild(bind1);
        link.AppendChild(bind2);
        body.AppendChild(link);
    }
}
